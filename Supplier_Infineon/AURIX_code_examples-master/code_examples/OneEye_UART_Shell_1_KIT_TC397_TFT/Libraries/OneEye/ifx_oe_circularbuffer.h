/**
 * \file ifx_oe_circularbuffer.h
 * \brief Circular buffer functions.
 *
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 */

#ifndef IFX_OE_CIRCULARBUFFER_H
#define IFX_OE_CIRCULARBUFFER_H

#include "ifx_oe_al.h"

/** \brief Circular buffer definition. */
typedef struct
{
    void* base;                    /**< \brief buffer base address */
    uint16 index;                  /**< \brief buffer current index */
    uint16 length;                 /**< \brief buffer length*/
} Ifx_Oe_CircularBuffer;

/** \brief Copy count bytes from the circular buffer to the data array
 *
 * \param buffer Specifies circular buffer.
 * \param data Specifies destination pointer.
 * \param count Specifies number of bytes to be copied. count MUST be >= 1.
 *
 * \return Returns the updated data pointer data = ((uint8*)data) + count
 */
void* Ifx_Oe_CircularBuffer_read8(Ifx_Oe_CircularBuffer* buffer, void* data, Ifx_Oe_SizeT count);

/** \brief Copy count bytes from the data array to the circular buffer
 *
 * \param buffer Specifies circular buffer.
 * \param data Specifies source pointer.
 * \param count Specifies number of bytes to be copied. count MUST be >= 1.
 *
 * \return Returns the updated data pointer data = ((uint8*)data) + count
 */
const void* Ifx_Oe_CircularBuffer_write8(Ifx_Oe_CircularBuffer* buffer, const void* data, Ifx_Oe_SizeT count);

/** \} */
//---------------------------------------------------------------------------
#endif
