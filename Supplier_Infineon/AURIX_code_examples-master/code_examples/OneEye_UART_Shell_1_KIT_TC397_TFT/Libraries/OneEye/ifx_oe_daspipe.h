/**
 * \file ifx_oe_daspipe.h
 *
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 */

#ifndef IFX_OE_DASPIPE_H
#define IFX_OE_DASPIPE_H

#include "ifx_oe_dpipewrapper.h"
#include "ifx_oe_dasfifo.h"

typedef struct
{
    uint32 size;        // size in bytes, limited to maximum 1024 bytes
} Ifx_Oe_DasPipe_Config;

typedef struct
{
    uint64 marker;
    struct
    {
        uint8 major;
        uint8 minor;
        uint8 patch;
        uint8 dummy;
    } Version;
} Ifx_Oe_DasPipe_Marker;

typedef struct
{
    Ifx_Oe_DasPipe_Marker oneEyeDebugPipe;
    Ifx_Oe_DasFifo fifo;
    uint32 writeCount;
    uint32 readCount;
    Ifx_Oe_TickTime txTimestamp;
    boolean isError;
} Ifx_Oe_DasPipe;

extern void    Ifx_Oe_DasPipe_initConfig(Ifx_Oe_DasPipe_Config* config);
extern boolean Ifx_Oe_DasPipe_init(Ifx_Oe_DasPipe* dasPipe, Ifx_Oe_DasPipe_Config* config);
extern boolean Ifx_Oe_DasPipe_stdIfDPipeInit(IfxStdIf_DPipe* stdif, Ifx_Oe_DasPipe* dpipe);

#endif
