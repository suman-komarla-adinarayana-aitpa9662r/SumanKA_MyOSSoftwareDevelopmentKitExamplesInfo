/**
 * \file ifx_oe_def.h
 *
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */
#ifndef IFX_OE_DEF_H
#define IFX_OE_DEF_H

#define IFX_OE_ALIGN_8   (1)            // Align on 8 bit Boundary
#define IFX_OE_ALIGN_16  (2)            // Align on 16 bit Boundary
#define IFX_OE_ALIGN_32  (4)            // Align on 32 bit Boundary
#define IFX_OE_ALIGN_64  (8)            // Align on 64 bit Boundary
#define IFX_OE_ALIGN_128 (16)           // Align on 128 bit Boundary
#define IFX_OE_ALIGN_256 (32)           // Align on 256 bit Boundary

#define IFX_OE_ALIGN_ON_256(Size) ((((Size) + (IFX_OE_ALIGN_256 - 1)) & (~(IFX_OE_ALIGN_256 - 1))))
#define IFX_OE_ALIGN_ON_128(Size) ((((Size) + (IFX_OE_ALIGN_128 - 1)) & (~(IFX_OE_ALIGN_128 - 1))))
#define IFX_OE_ALIGN_ON_64(Size)  ((((Size) + (IFX_OE_ALIGN_64 - 1)) & (~(IFX_OE_ALIGN_64 - 1))))
#define IFX_OE_ALIGN_ON_32(Size)  ((((Size) + (IFX_OE_ALIGN_32 - 1)) & (~(IFX_OE_ALIGN_32 - 1))))
#define IFX_OE_ALIGN_ON_16(Size)  ((((Size) + (IFX_OE_ALIGN_16 - 1)) & (~(IFX_OE_ALIGN_16 - 1))))
#define IFX_OE_ALIGN_ON_8(Size)   ((((Size) + (IFX_OE_ALIGN_8 - 1)) & (~(IFX_OE_ALIGN_8 - 1))))

#define IFX_OE_COUNTOF(x) (sizeof(x) / sizeof(x[0]))

#define IFX_OE_ASSERT(x) ((void)0)

#define IFX_OE_MIN(X, Y) (((X) < (Y)) ? (X) : (Y))

#define IFX_OE_MAX(X, Y) (((X) > (Y)) ? (X) : (Y))

#define IFX_OE_SATURATE(X, Min, Max) (IFX_OE_MIN(IFX_OE_MAX(X, Min), Max))

#define IFX_OE_UNUSED(x) ((void)(x))

#ifndef NULL_PTR
#ifdef __cplusplus
#define NULL_PTR (nullptr)
#else
#define NULL_PTR ((void*)0)
#endif
#endif

#ifdef __cplusplus
#define IFX_OE_EXTERN extern "C"
#else
#define IFX_OE_EXTERN extern
#endif

#ifndef TRUE
#define TRUE (1u)
#endif

#ifndef FALSE
#define FALSE (0u)
#endif

#ifndef IFX_OE_ENDL
#define IFX_OE_ENDL "\r"
#endif

#endif /* IFX_OE_DEF_H */
